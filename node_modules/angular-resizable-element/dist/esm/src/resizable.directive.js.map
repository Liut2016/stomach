{"version":3,"sources":["../../../src/resizable.directive.ts"],"names":[],"mappings":"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","file":"resizable.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { merge } from 'rxjs/observable/merge';\nimport { interval } from 'rxjs/observable/interval';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/throttle';\nimport 'rxjs/add/operator/share';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff < precision;\n}\n\nfunction getNewBoundingRectangle(\n  startingRect: BoundingRectangle,\n  edges: Edges,\n  clientX: number,\n  clientY: number\n): BoundingRectangle {\n  const newBoundingRect: BoundingRectangle = {\n    top: startingRect.top,\n    bottom: startingRect.bottom,\n    left: startingRect.left,\n    right: startingRect.right\n  };\n\n  if (edges.top) {\n    newBoundingRect.top += clientY;\n  }\n  if (edges.bottom) {\n    newBoundingRect.bottom += clientY;\n  }\n  if (edges.left) {\n    newBoundingRect.left += clientX;\n  }\n  if (edges.right) {\n    newBoundingRect.right += clientX;\n  }\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n\n  return newBoundingRect;\n}\n\nfunction getElementRect(\n  element: ElementRef,\n  ghostElementPositioning: string\n): BoundingRectangle {\n\n  let translateX = 0;\n  let translateY = 0;\n  const style = element.nativeElement.style;\n  const transformProperties = ['transform', '-ms-transform', '-moz-transform', '-o-transform'];\n  const transform = transformProperties.map(property => style[property]).find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom: element.nativeElement.offsetHeight + element.nativeElement.offsetTop - translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right: element.nativeElement.offsetWidth + element.nativeElement.offsetLeft - translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY <= rect.bottom;\n}\n\nfunction isWithinBoundingX({\n  clientX,\n  rect\n}: {\n  clientX: number;\n  rect: ClientRect;\n}): boolean {\n  return clientX >= rect.left && clientX <= rect.right;\n}\n\nfunction getResizeEdges({\n  clientX,\n  clientY,\n  elm,\n  allowedEdges,\n  cursorPrecision\n}: {\n  clientX: number;\n  clientY: number;\n  elm: ElementRef;\n  allowedEdges: Edges;\n  cursorPrecision: number;\n}): Edges {\n  const elmPosition: ClientRect = elm.nativeElement.getBoundingClientRect();\n  const edges: Edges = {};\n\n  if (\n    allowedEdges.left &&\n    isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.left = true;\n  }\n\n  if (\n    allowedEdges.right &&\n    isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.right = true;\n  }\n\n  if (\n    allowedEdges.top &&\n    isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.top = true;\n  }\n\n  if (\n    allowedEdges.bottom &&\n    isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.bottom = true;\n  }\n\n  return edges;\n}\n\nexport interface ResizeCursors {\n  topLeft: string;\n  topRight: string;\n  bottomLeft: string;\n  bottomRight: string;\n  leftOrRight: string;\n  topOrBottom: string;\n}\n\nconst DEFAULT_RESIZE_CURSORS: ResizeCursors = Object.freeze({\n  topLeft: 'nw-resize',\n  topRight: 'ne-resize',\n  bottomLeft: 'sw-resize',\n  bottomRight: 'se-resize',\n  leftOrRight: 'ew-resize',\n  topOrBottom: 'ns-resize'\n});\n\nfunction getResizeCursor(edges: Edges, cursors: ResizeCursors): string {\n  if (edges.left && edges.top) {\n    return cursors.topLeft;\n  } else if (edges.right && edges.top) {\n    return cursors.topRight;\n  } else if (edges.left && edges.bottom) {\n    return cursors.bottomLeft;\n  } else if (edges.right && edges.bottom) {\n    return cursors.bottomRight;\n  } else if (edges.left || edges.right) {\n    return cursors.leftOrRight;\n  } else if (edges.top || edges.bottom) {\n    return cursors.topOrBottom;\n  } else {\n    return '';\n  }\n}\n\nfunction getEdgesDiff({\n  edges,\n  initialRectangle,\n  newRectangle\n}: {\n  edges: Edges;\n  initialRectangle: BoundingRectangle;\n  newRectangle: BoundingRectangle;\n}): Edges {\n  const edgesDiff: Edges = {};\n  Object.keys(edges).forEach((edge: keyof Edges) => {\n    edgesDiff[edge] = newRectangle[edge] - initialRectangle[edge];\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n */\n\nexport class ResizableDirective implements OnInit, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n   validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   */\n   resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n   enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n   resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n   resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   */\n   resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n   ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n   resizeStart = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n   resizing = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n   resizeEnd = new EventEmitter<ResizeEvent>();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n    event: MouseEvent | TouchEvent;\n  }>();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private pointerEventListenerSubscriptions: any = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListenerSubscriptions.pointerDown = this.pointerEventListeners.pointerDown.subscribe(\n      ({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerMove = this.pointerEventListeners.pointerMove.subscribe(\n      ({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerUp = this.pointerEventListeners.pointerUp.subscribe(\n      ({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      }\n    );\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const mouseMove: Observable<any> = this.mousemove.share();\n\n    mouseMove.filter(() => !!currentResize).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    mouseMove\n      .throttle(() => interval(MOUSE_MOVE_THROTTLE_MS))\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors: ResizeCursors = Object.assign(\n          {},\n          DEFAULT_RESIZE_CURSORS,\n          this.resizeCursors\n        );\n        if (currentResize) {\n          const cursor: string = getResizeCursor(\n            currentResize.edges,\n            resizeCursors\n          );\n          this.renderer.setStyle(document.body, 'cursor', cursor);\n        } else {\n          const cursor: string = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, !!currentResize);\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable<any> = this.mousedown\n      .flatMap(startCoords => {\n        function getDiff(moveCoords: { clientX: number; clientY: number }) {\n          return {\n            clientX: moveCoords.clientX - startCoords.clientX,\n            clientY: moveCoords.clientY - startCoords.clientY\n          };\n        }\n\n        const getSnapGrid = () => {\n          const snapGrid: Coordinate = { x: 1, y: 1 };\n\n          if (currentResize) {\n            if (this.resizeSnapGrid.left && currentResize.edges.left) {\n              snapGrid.x = +this.resizeSnapGrid.left;\n            } else if (this.resizeSnapGrid.right && currentResize.edges.right) {\n              snapGrid.x = +this.resizeSnapGrid.right;\n            }\n\n            if (this.resizeSnapGrid.top && currentResize.edges.top) {\n              snapGrid.y = +this.resizeSnapGrid.top;\n            } else if (\n              this.resizeSnapGrid.bottom &&\n              currentResize.edges.bottom\n            ) {\n              snapGrid.y = +this.resizeSnapGrid.bottom;\n            }\n          }\n\n          return snapGrid;\n        };\n\n        function getGrid(\n          coords: { clientX: number; clientY: number },\n          snapGrid: Coordinate\n        ) {\n          return {\n            x: Math.ceil(coords.clientX / snapGrid.x),\n            y: Math.ceil(coords.clientY / snapGrid.y)\n          };\n        }\n\n        return merge(\n          mouseMove.take(1).map(coords => [, coords]),\n          mouseMove.pairwise()\n        )\n          .map(([previousCoords, newCoords]) => {\n            return [\n              previousCoords ? getDiff(previousCoords) : previousCoords,\n              getDiff(newCoords)\n            ];\n          })\n          .filter(([previousCoords, newCoords]) => {\n            if (!previousCoords) {\n              return true;\n            }\n\n            const snapGrid: Coordinate = getSnapGrid();\n            const previousGrid: Coordinate = getGrid(previousCoords, snapGrid);\n            const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n            return previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y;\n          })\n          .map(([, newCoords]) => {\n            const snapGrid: Coordinate = getSnapGrid();\n            return {\n              clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n              clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n            };\n          })\n          .takeUntil(merge(this.mouseup, this.mousedown));\n      })\n      .filter(() => !!currentResize);\n\n    mousedrag\n      .map(({ clientX, clientY }) => {\n        return getNewBoundingRectangle(\n          currentResize!.startingRect,\n          currentResize!.edges,\n          clientX,\n          clientY\n        );\n      })\n      .filter((newBoundingRect: BoundingRectangle) => {\n        return !!(\n          newBoundingRect.height &&\n          newBoundingRect.width &&\n          newBoundingRect.height > 0 &&\n          newBoundingRect.width > 0\n        );\n      })\n      .filter((newBoundingRect: BoundingRectangle) => {\n        return this.validateResize\n          ? this.validateResize({\n              rectangle: newBoundingRect,\n              edges: getEdgesDiff({\n                edges: currentResize!.edges,\n                initialRectangle: currentResize!.startingRect,\n                newRectangle: newBoundingRect\n              })\n            })\n          : true;\n      })\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .map(({ clientX, clientY, edges }) => {\n        return (\n          edges ||\n          getResizeEdges({\n            clientX,\n            clientY,\n            elm: this.elm,\n            allowedEdges: this.resizeEdges,\n            cursorPrecision: this.resizeCursorPrecision\n          })\n        );\n      })\n      .filter((edges: Edges) => {\n        return Object.keys(edges).length > 0;\n      })\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          const resizeCursors: ResizeCursors = Object.assign(\n            {},\n            DEFAULT_RESIZE_CURSORS,\n            this.resizeCursors\n          );\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.pointerEventListenerSubscriptions.pointerDown.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerMove.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerUp.unsubscribe();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mwlResizable]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'validateResize': [{ type: Input },],\n'resizeEdges': [{ type: Input },],\n'enableGhostResize': [{ type: Input },],\n'resizeSnapGrid': [{ type: Input },],\n'resizeCursors': [{ type: Input },],\n'resizeCursorPrecision': [{ type: Input },],\n'ghostElementPositioning': [{ type: Input },],\n'resizeStart': [{ type: Output },],\n'resizing': [{ type: Output },],\n'resizeEnd': [{ type: Output },],\n};\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable<PointerEventCoordinate>;\n\n  public pointerMove: Observable<PointerEventCoordinate>;\n\n  public pointerUp: Observable<PointerEventCoordinate>;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).share();\n\n    this.pointerMove = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).share();\n\n    this.pointerUp = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).share();\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}