{"version":3,"file":"perfect-scrollbar.interfaces.js","sourceRoot":"","sources":["../../src/lib/perfect-scrollbar.interfaces.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,cAAc,EAAE,sBAAsB;AAE/C,MAAM,CAAC,qBAAM,wBAAwB,GAAG,IAAI,cAAc,CAAC,0BAA0B,CAAC,CAAC;AAEvF,IAAA;IAOE,kBAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;QACpD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACZ;mBAhBH;IAiBC,CAAA;AAbD,oBAaC;;;;;;;;;;;AAED,IAAA;IAIE,kBAAY,CAA2B,EAAE,CAA2B;QAClE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACZ;mBA1BH;IA2BC,CAAA;AARD,oBAQC;;;;;;;AAED,MAAM,CAAC,qBAAM,sBAAsB,GAAG;IACpC,WAAW;IACX,WAAW;IAEX,YAAY;IACZ,cAAc;IACd,cAAc;IACd,eAAe;IAEf,aAAa;IACb,eAAe;IACf,aAAa;IACb,eAAe;CAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBF,IAAA;IAsBE,gCAAY,MAA4C;QAA5C,uBAAA,EAAA,WAA4C;QACtD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KACrB;;;;;IAEM,uCAAM;;;;cAAC,MAA4C;QAA5C,uBAAA,EAAA,WAA4C;QACxD,GAAG,CAAC,CAAC,qBAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;;iCAhGL;IAkGC,CAAA;AA/BD,kCA+BC","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\n\nexport class Geometry {\n  public x: number;\n  public y: number;\n\n  public w: number;\n  public h: number;\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n}\n\nexport class Position {\n  public x: number | 'start' | 'end';\n  public y: number | 'start' | 'end';\n\n  constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport const PerfectScrollbarEvents = [\n  'psScrollY',\n  'psScrollX',\n\n  'psScrollUp',\n  'psScrollDown',\n  'psScrollLeft',\n  'psScrollRight',\n\n  'psYReachEnd',\n  'psYReachStart',\n  'psXReachEnd',\n  'psXReachStart'\n];\n\nexport interface PerfectScrollbarConfigInterface {\n  handlers?: string[];\n\n  wheelSpeed?: number;\n  swipeEasing?: boolean;\n\n  suppressScrollX?: boolean;\n  suppressScrollY?: boolean;\n\n  useBothWheelAxes?: boolean;\n\n  wheelPropagation?: boolean;\n  swipePropagation?: boolean;\n\n  scrollingThreshold?: number;\n\n  minScrollbarLength?: number;\n  maxScrollbarLength?: number;\n\n  scrollXMarginOffset?: number;\n  scrollYMarginOffset?: number;\n}\n\nexport class PerfectScrollbarConfig implements PerfectScrollbarConfigInterface {\n  public handlers: string[];\n\n  public wheelSpeed: number;\n  public swipeEasing: boolean;\n\n  public suppressScrollX: boolean;\n  public suppressScrollY: boolean;\n\n  public useBothWheelAxes: boolean;\n\n  public wheelPropagation: boolean;\n  public swipePropagation: boolean;\n\n  public scrollingThreshold: number;\n\n  public minScrollbarLength: number;\n  public maxScrollbarLength: number;\n\n  public scrollXMarginOffset: number;\n  public scrollYMarginOffset: number;\n\n  constructor(config: PerfectScrollbarConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  public assign(config: PerfectScrollbarConfigInterface = {}) {\n    for (const key in config) {\n      this[key] = config[key];\n    }\n  }\n}\n"]}