{"version":3,"file":"ngx-store.js","sources":["../../src/decorator/cache-item.ts","../../src/decorator/cache.ts","../../src/utility/storage/storage-event.ts","../../src/utility/webstorage.utility.ts","../../src/config/config.helper.ts","../../src/config/config.ts","../../src/service/resource.ts","../../src/service/webstorage.service.ts","../../src/utility/storage/storage.ts","../../src/utility/storage/cookies-storage.ts","../../src/utility/shared-storage.utility.ts","../../src/utility/storage/shared-storage.ts","../../src/utility/index.ts","../../src/service/local-storage.service.ts","../../src/service/session-storage.service.ts","../../src/service/cookies-storage.service.ts","../../src/service/shared-storage.service.ts","../../src/decorator/webstorage.ts","../../src/ngx-store.ts","../../public_api.ts"],"sourcesContent":["import { WebStorageServiceInterface } from '../service';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\nimport { Config, debug } from '../config/index';\nimport { DecoratorConfig } from '../ngx-store.types';\nimport { Cache } from './cache';\n\nconst isEqual = require('lodash.isequal');\n\nexport interface CacheItemInterface {\n    key: string;\n    name: string;\n    targets: Array<Object>;\n    services: Array<WebStorageServiceInterface>;\n    utilities: Array<UtilityEntry>;\n}\n\nexport interface UtilityEntry {\n    utility: WebStorageUtility;\n    config?: DecoratorConfig;\n}\n\nexport class CacheItem implements CacheItemInterface {\n    public name: string = '';\n    public targets: Array<Object> = [];\n    public services: Array<WebStorageServiceInterface> = [];\n    public utilities: Array<UtilityEntry> = [];\n    public currentTarget: Object;\n    protected proxy: any = null;\n    protected _key: string = '';\n    protected initializedTargets: Set<Object> = new Set();\n\n    constructor(cacheItem: CacheItemInterface) {\n        this._key = cacheItem.key;\n        this.name = cacheItem.name;\n        this.addTargets(cacheItem.targets);\n        this.addServices(cacheItem.services);\n        this.addUtilities(cacheItem.utilities);\n    }\n\n    public get key() {\n        return this._key;\n    }\n\n    public saveValue(value: any, config: DecoratorConfig = {}, source?: WebStorageUtility): any {\n        debug.groupCollapsed('CacheItem#saveValue for ' + this.key + ' in ' + this.currentTarget.constructor.name);\n        debug.log('new value: ', value);\n        debug.log('previous value: ', this.readValue());\n        debug.log('targets.length: ', this.targets.length);\n        debug.log('currentTarget:', this.currentTarget);\n        debug.groupEnd();\n\n        // prevent overwriting value by initializators\n        if (!this.initializedTargets.has(this.currentTarget)) {\n            this.initializedTargets.add(this.currentTarget);\n            const readValue = this.readValue();\n            const savedValue = (readValue !== null && readValue !== undefined) ? readValue : value;\n            let proxy = this.getProxy(savedValue, config);\n            proxy = (proxy !== null) ? proxy : value;\n            debug.log('initial value for ' + this.key + ' in ' + this.currentTarget.constructor.name, proxy);\n            this.propagateChange(savedValue, source);\n            return proxy;\n        }\n        this.propagateChange(value, source);\n        return this.getProxy(value, config);\n    }\n\n    public getProxy(value?: any, config: DecoratorConfig = {}): any {\n        if (value === undefined && this.proxy) return this.proxy; // return cached proxy if value hasn't changed\n        value = (value === undefined) ? this.readValue() : value;\n        if (typeof value !== 'object' || value === null) {\n            this.proxy = value;\n            return value;\n        }\n        if ((!Config.mutateObjects && !config.mutate) || config.mutate === false) return value;\n\n        const _self = this; // alias to use in standard function expressions\n        const prototype: any = Object.assign(new value.constructor(), value.__proto__);\n\n        prototype.save = function () { // add method for triggering force save\n            _self.saveValue(value, config);\n        };\n\n        // TODO set prototype for Array.prototype or something\n        if (Array.isArray(value)) { // handle methods that could change value of array\n            const methodsToOverwrite = [\n                'pop', 'push', 'reverse', 'shift', 'unshift', 'splice',\n                'filter', 'forEach', 'map', 'fill', 'sort', 'copyWithin'\n            ];\n            for (const method of methodsToOverwrite) {\n                prototype[method] = function () {\n                    const readValue = _self.readValue();\n                    const result = Array.prototype[method].apply(readValue, arguments);\n                    debug.log('Saving value for ' + _self.key + ' by method ' + prototype.constructor.name + '.' + method);\n                    _self.saveValue(readValue, config);\n                    return result;\n                };\n            }\n        }\n        Object.setPrototypeOf(value, prototype);\n        this.proxy = value;\n        return value;\n    }\n\n    public readValue(config: DecoratorConfig = {}): any {\n        const entry = this.utilities[0];\n        const value = entry ? entry.utility.get(this.key, entry.config) : null;\n        return (typeof value !== 'object') ? value : JSON.parse(JSON.stringify(this.getProxy(value, entry.config)));\n    }\n\n    public addTargets(targets: Array<any>): void {\n        targets.forEach(target => {\n            if (this.targets.indexOf(target) === -1) {\n                if (typeof target === 'object') { // handle Angular Component destruction\n                    const originalFunction = target.ngOnDestroy;\n                    const _self = this;\n                    target.ngOnDestroy = function() {\n                        if (typeof originalFunction === 'function') {\n                            originalFunction.apply(this, arguments);\n                        }\n                        target.ngOnDestroy = originalFunction || function() {};\n\n                        _self.initializedTargets.delete(target);\n                        _self.targets = _self.targets.filter(t => t !== target);\n                        if (!_self.targets.length) {\n                            _self.services.forEach(service => {\n                                service.keys = service.keys.filter(key => key !== _self._key);\n                            });\n                            _self.resetProxy();\n                            Cache.remove(_self);\n                        }\n                        debug.groupCollapsed(`${_self.key} OnDestroy handler:`);\n                        debug.log('removed target:', target.constructor.name);\n                        debug.log('remaining targets:', _self.targets);\n                        debug.log('cacheItem:', Cache.get(_self.key));\n                        debug.groupEnd();\n                    };\n                    this.targets.push(target);\n                }\n            }\n        });\n    }\n\n    public addServices(services: Array<WebStorageServiceInterface>): void {\n        services.forEach(service => {\n            if (this.services.indexOf(service) === -1) {\n                service.keys.push(this._key);\n                this.services.push(service);\n            }\n        });\n    }\n\n    public addUtilities(utilityEntries: Array<UtilityEntry>): void {\n        utilityEntries.forEach(entry => {\n            if (this.utilities.findIndex(e => e.utility === entry.utility) === -1) {\n                this.utilities.push(entry);\n                entry.utility.set(this.key, this.readValue());\n            }\n        });\n    }\n\n    public resetProxy(): void {\n        this.proxy = null;\n    }\n\n    public propagateChange(value: any, source) {\n        if (isEqual(value, this.readValue())) return;\n        this.utilities.forEach(entry => {\n            const utility = entry.utility;\n            // updating service which the change came from would affect in a cycle\n            if (utility === source) return;\n            debug.log(`propagating change on ${this.key} to:`, utility);\n            utility.set(this._key, value, entry.config);\n        });\n    }\n}\n","import { CacheItem, CacheItemInterface } from './cache-item';\nimport { debug } from '../config/config';\n\nexport class Cache {\n    public static items: Map<string, CacheItem> = new Map();\n\n    public static getCacheFor(cacheCandidate: CacheItemInterface): CacheItem {\n        let cacheItem = Cache.get(cacheCandidate.key);\n        if (!cacheItem) {\n            cacheItem = new CacheItem(cacheCandidate);\n            debug.log(`Created new CacheItem for ${cacheCandidate.name} for ${cacheItem.utilities[0].utility.getStorageName()}`);\n            Cache.set(cacheItem);\n            return cacheItem;\n        }\n        debug.log(`Loaded prior CacheItem of ${cacheItem.name} for ${cacheCandidate.utilities[0].utility.getStorageName()}`);\n        cacheItem.addTargets(cacheCandidate.targets);\n        cacheItem.addServices(cacheCandidate.services);\n        cacheItem.addUtilities(cacheCandidate.utilities);\n        Cache.set(cacheItem);\n        return cacheItem;\n    }\n\n    public static remove(cacheItem: CacheItem): boolean {\n        return Cache.items.delete(cacheItem.key);\n    }\n\n    public static get(key: string): CacheItem {\n        return Cache.items.get(key);\n    }\n\n    protected static set(cacheItem: CacheItem): void {\n        if (!Cache.get(cacheItem.key)) {\n            debug.log('CacheItem for ' + cacheItem.key, cacheItem);\n        }\n        Cache.items.set(cacheItem.key, cacheItem);\n    }\n}\n","export class NgxStorageEvent implements StorageEvent {\n    protected static initTimeStamp = Date.now();\n    public oldValue: any;\n    public newValue: any;\n    public NONE: any;\n    public timeStamp = (Date.now() - NgxStorageEvent.initTimeStamp);\n    public readonly bubbles = false;\n    public readonly cancelBubble = false;\n    public readonly cancelable = false;\n    public readonly composed = false;\n    public readonly currentTarget = window;\n    public readonly defaultPrevented = false;\n    public readonly eventPhase = 2;\n    public readonly isTrusted = true;\n    public readonly path = [window];\n    public readonly returnValue = true;\n    public readonly srcElement = <any>window;\n    public readonly target = window;\n    public readonly url = window.location.href;\n    public isInternal = true;\n\n    constructor(public type: string, public key: string, public storageArea: Storage) {}\n\n    /**\n     * Methods below exist only to satisfy TypeScript compiler\n     */\n\n    public get scoped() {\n        return StorageEvent.prototype.scoped;\n    }\n\n    public get initEvent() {\n        return StorageEvent.prototype.initEvent.bind(this);\n    }\n\n    public get preventDefault() {\n        return StorageEvent.prototype.preventDefault.bind(this);\n    }\n\n    public get stopImmediatePropagation() {\n        return StorageEvent.prototype.stopImmediatePropagation.bind(this);\n    }\n\n    public get stopPropagation() {\n        return StorageEvent.prototype.stopPropagation.bind(this);\n    }\n\n    public get deepPath() {\n        return StorageEvent.prototype.deepPath.bind(this);\n    }\n\n    public get AT_TARGET() {\n        return StorageEvent.prototype.AT_TARGET;\n    }\n\n    public get BUBBLING_PHASE() {\n        return StorageEvent.prototype.BUBBLING_PHASE;\n    }\n\n    public get CAPTURING_PHASE() {\n        return StorageEvent.prototype.BUBBLING_PHASE;\n    }\n}\n","import { DecoratorConfig } from '../ngx-store.types';\nimport { WebStorage } from './storage/cookies-storage';\nimport { Cache } from '../decorator/cache';\nimport { CONFIG_PREFIX, debug } from '../config/index';\nimport { Subject } from 'rxjs';\nimport { NgxStorageEvent } from './storage/storage-event';\nimport { Observable } from 'rxjs';\nexport type StorageName = 'localStorage' | 'sessionStorage' | 'cookiesStorage' | 'sharedStorage';\n\nexport class WebStorageUtility {\n    protected _prefix: string = '';\n    protected _storage: WebStorage;\n    protected _changes: Subject<NgxStorageEvent> = new Subject();\n\n    public static getSettable(value: any): string {\n        return JSON.stringify(value);\n    }\n\n    public static getGettable(value: string): any {\n        if (value === 'undefined') return null;\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n            return value;\n        }\n    }\n\n    public constructor(storage: WebStorage, prefix: string, previousPrefix?: string) {\n        this._storage = storage;\n        this._prefix = prefix;\n\n        // handle previousPrefix for backward-compatibility and safe config changes below\n        if (prefix === previousPrefix) return;\n        if (previousPrefix === null) return;\n        if (previousPrefix === undefined) return;\n        debug.log(this.getStorageName() + ' > Detected prefix change from ' + previousPrefix + ' to ' + prefix);\n        this.forEach((value, key) => {\n            // ignore config settings when previousPrefix = ''\n            if (key.startsWith(previousPrefix) && !key.startsWith(CONFIG_PREFIX)) {\n                const nameWithoutPrefix = this.trimPrefix(key);\n                this.set(nameWithoutPrefix, this._storage.getItem(key));\n\n                if (previousPrefix !== '') {\n                    this._storage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    public get prefix(): string {\n        return this._prefix;\n    }\n\n    public get keys(): Array<string> {\n        const keys = [];\n        this.forEach((value, key) => keys.push(key));\n        return keys;\n    }\n\n    public get changes(): Observable<NgxStorageEvent> {\n        return this._changes.asObservable();\n    }\n\n    public getStorage() {\n        return this._storage;\n    }\n\n    public getStorageKey(key: string, prefix?: string): string {\n        prefix = (typeof prefix === 'string') ? prefix : this.prefix;\n        return `${prefix}${key}`;\n    }\n\n    public getStorageName(): StorageName {\n        return this._storage.type || ((this._storage === localStorage) ? 'localStorage' : 'sessionStorage');\n    }\n\n    public get(key: string, config: DecoratorConfig = {}): any {\n        const storageKey = this.getStorageKey(key, config.prefix);\n        const value = this._storage.getItem(storageKey);\n        return this.getGettable(value);\n    }\n\n    public set<T>(key: string, value: T, config: DecoratorConfig = {}): T {\n        if (value === null || value === undefined) {\n            this.remove(key);\n            return null;\n        }\n        try {\n            const storageKey = this.getStorageKey(key, config.prefix);\n            const storable = this.getSettable(value);\n            this.emitEvent(key, value);\n            this._storage.setItem(storageKey, storable, config.expires);\n            const cacheItem = Cache.get(key);\n            if (cacheItem) {\n                debug.log(`updating following CacheItem from ${this.constructor.name}:`, cacheItem);\n                cacheItem.resetProxy();\n                cacheItem.propagateChange(value, this);\n            }\n        } catch (error) {\n            console.warn(`[ngx-store] ${this.getStorageName()}: following error occurred while trying to save ${key} =`, value);\n            console.error(error);\n        }\n        return value;\n    }\n\n    // TODO return true if item existed and false otherwise (?)\n    public remove(key: string, config: DecoratorConfig = {}): void {\n        const storageKey = this.getStorageKey(key, config.prefix);\n        this._storage.removeItem(storageKey);\n        const cacheItem = Cache.get(key);\n        if (cacheItem) {\n            cacheItem.resetProxy();\n        }\n    }\n\n    public clear() {\n        this.emitEvent(null, null, null);\n        this.forEach((value, key) => {\n            if (key.startsWith(CONFIG_PREFIX)) return;\n            this.remove(key, {prefix: ''});\n        });\n    }\n\n    public forEach(callbackFn: (value: any, key: string) => any): void {\n        if (typeof this._storage.forEach === 'function') {\n            return this._storage.forEach((value, key) => {\n                callbackFn(this.getGettable(value), key);\n            });\n        }\n        Object.keys(this._storage).forEach((key) => {\n            callbackFn(this.getGettable(this._storage[key]), key);\n        });\n    }\n\n    public getSettable(value: any): string {\n        return WebStorageUtility.getSettable(value);\n    }\n\n    public getGettable(value: string): any {\n        return WebStorageUtility.getGettable(value);\n    }\n\n    public trimPrefix(key: string): string {\n       return key.replace(this.prefix, '');\n    }\n\n    protected emitEvent(key: string, newValue: any, oldValue?: any) {\n        const event = new NgxStorageEvent(this.getStorageName(), key, this._storage);\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n        event.newValue = newValue;\n        this._changes.next(event);\n    }\n}\n","import { WebStorageUtility } from '../utility/webstorage.utility';\n\nexport const CONFIG_PREFIX = 'NGX-STORE_';\n\nexport class ConfigHelper {\n    protected static _webStorageUtility: WebStorageUtility =\n        new WebStorageUtility(localStorage, CONFIG_PREFIX);\n\n    public static getItem(key: string): any {\n        return ConfigHelper._webStorageUtility.get(key);\n    }\n\n    public static setItem(key: string, item: any): any {\n        return ConfigHelper._webStorageUtility.set(key, item);\n    }\n}\n","import { WebStorageConfigInterface } from './config.interface';\nimport { ConfigHelper } from './config.helper';\nimport { Debugger } from 'ts-debug';\n\n// TODO allow to set different config for local and session storage\n// TODO check if NGXSTORE_CONFIG implements WebStorageConfigInterface\n// TODO allow to set configuration in node-config (`config` on npm)\n\nexport { CONFIG_PREFIX } from './config.helper';\n\nconst DefaultConfig: WebStorageConfigInterface = {\n    prefix: 'ngx_',\n    previousPrefix: 'angular2ws_',\n    clearType: 'prefix',\n    mutateObjects: true,\n    cookiesScope: '',\n    cookiesCheckInterval: 0,\n    debugMode: false,\n};\n\n// take configuration provided as a global variable\ndeclare const NGXSTORE_CONFIG: WebStorageConfigInterface;\n\nlet ConfigFills: WebStorageConfigInterface = {};\nconst localStoragePrefix = ConfigHelper.getItem('prefix');\n\nif (typeof NGXSTORE_CONFIG === 'object') {\n    ConfigFills = Object.assign({}, NGXSTORE_CONFIG);\n}\n\nif (localStoragePrefix !== undefined && localStoragePrefix !== null) {\n    ConfigFills.previousPrefix = localStoragePrefix;\n} else if (ConfigFills.previousPrefix === undefined) {\n    ConfigFills.previousPrefix = DefaultConfig.previousPrefix;\n}\n\n// merge default config, deprecated config and global config all together\nexport const Config: WebStorageConfigInterface =\n    Object.assign({}, DefaultConfig, ConfigFills);\n\nexport const debug = new Debugger(console, Config.debugMode, '[ngx-store] ');\nConfigHelper.setItem('prefix', Config.prefix);\n","import { WebStorageService } from './webstorage.service';\nimport { Config } from '../config/config';\nconst _get = require('lodash.get');\nconst _set = require('lodash.set');\nconst _merge = require('lodash.merge');\n\nexport class Resource<T> {\n    protected _defaultValue: any = null;\n    protected _path: Array<string> = [];\n    protected _prefix = Config.prefix;\n\n    constructor(protected service: WebStorageService, protected readonly key: string) {}\n\n    /**\n     * Returns value taking path into account\n     * @returns {any}\n     */\n    public get value(): T {\n        return this.considerDefault(this.readValue());\n    }\n\n    /**\n     * Returns default value\n     * @returns {T}\n     */\n    public get defaultValue(): T {\n        return this._defaultValue;\n    }\n\n    /**\n     * Returns current path as a string\n     * @returns {string}\n     */\n    public get path(): string {\n        return this.pathString;\n    }\n\n    /**\n     * Returns currently set prefix\n     * @returns {string}\n     */\n    public get prefix(): string {\n        return this._prefix;\n    }\n\n    /**\n     * Sets path of object property\n     * @param {string} path\n     * @returns {this}\n     */\n    public setPath(path: string): this {\n        this._path = path.split('.');\n        return this;\n    }\n\n    /**\n     * Appends current path\n     * e.g. if path('key') and appendPath('nested'), the path will be \"key.nested\"\n     * @param {string} path\n     * @returns {this}\n     */\n    public appendPath(path: string): this {\n        this._path.push(path);\n        return this;\n    }\n\n    /**\n     * Removes last item of path\n     * e.g. if path('key.nested') and truncatePath(), the path will be \"key\"\n     * @returns {this}\n     */\n    public truncatePath(): this {\n        this._path.pop();\n        return this;\n    }\n\n    /**\n     * Resets set path\n     * @returns {this}\n     */\n    public resetPath(): this {\n        this._path = [];\n        return this;\n    }\n\n    /**\n     * Sets prefix\n     * @param {string} prefix\n     * @returns {this}\n     */\n    public setPrefix(prefix: string): this {\n        this._prefix = prefix;\n        return this;\n    }\n\n    /**\n     * Moves storage item to new key using given prefix\n     * @param {string} prefix\n     * @returns {this}\n     */\n    public changePrefix(prefix: string): this {\n        this.service.utility.set(this.key, this.fullValue, {prefix});\n        this.service.utility.remove(this.key, {prefix: this._prefix});\n        return this.setPrefix(prefix);\n    }\n\n    /**\n     * Sets default value for both reading and saving operations\n     * @param defaultValue\n     * @returns {this}\n     */\n    public setDefaultValue(defaultValue: T): this {\n        this._defaultValue = defaultValue;\n        const value = this.readValue();\n        if (this.isNullOrUndefined(value)) {\n            this.save(defaultValue);\n        }\n        return this;\n    }\n\n    /**\n     * Creates or overrides value as a new entry or existing object property depending on path\n     * @param value\n     * @returns {this}\n     */\n    public save(value: T): this {\n        if (this.pathString) {\n            value = _set(this.fullValue, this.pathString, this.considerDefault(value));\n        }\n        this.service.utility.set(this.key, this.considerDefault(value), {prefix: this._prefix});\n        return this;\n    }\n\n    /**\n     * Updates existing object property using current path\n     * @param {T} value\n     * @returns {this}\n     */\n    public update(value: T): this {\n        return this.save(_merge(this.readValue(), value));\n    }\n\n    /**\n     * Removes item stored under current key\n     * @returns {this}\n     */\n    public remove(): this {\n        this.service.utility.remove(this.key);\n        return this;\n    }\n\n    protected get fullValue(): T {\n        return this.considerDefault(this.service.utility.get(this.key, {prefix: this._prefix}));\n    }\n\n    protected considerDefault<S>(value: S): S {\n        return this.isNullOrUndefined(value) ? this._defaultValue : value;\n    }\n\n    protected isNullOrUndefined(value: any): boolean {\n        return (value === null || value === undefined);\n    }\n\n    protected get pathString(): string {\n        return this._path.join('.');\n    }\n\n    protected readValue(): T {\n        const value = this.service.utility.get(this.key, {prefix: this._prefix});\n        if (this.pathString) {\n            return _get(value, this.pathString);\n        }\n        return value;\n    }\n}\n","import { debug, ClearType, Config, WebStorageConfigInterface } from '../config/index';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\nimport { WebStorageServiceInterface } from './webstorage.interface';\nimport { Cache } from '../decorator/cache';\nimport { Observable } from 'rxjs';\nimport { delay, filter } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\nimport { Resource } from './resource';\nconst merge = require('lodash.merge');\n\nexport abstract class WebStorageService {\n    public static keys: Array<string> = [];\n    protected _changes: Observable<NgxStorageEvent>;\n\n    public constructor(public utility: WebStorageUtility) { }\n\n    /**\n     * Gets keys for stored variables created by ngx-store,\n     * ignores keys that have not been created by decorators and have no prefix at once\n     */\n    public get keys(): Array<string> {\n        // get prefixed key if prefix is defined\n        const prefixKeys = this.utility.keys.filter(key => {\n            return this.utility.prefix && key.startsWith(this.utility.prefix);\n        });\n        const decoratorKeys = (<WebStorageServiceInterface>this.constructor).keys;\n        return prefixKeys.concat(decoratorKeys);\n    }\n\n    public get config(): WebStorageConfigInterface {\n        return Config;\n    }\n\n    public get(key: string): any {\n        return this.utility.get(key);\n    }\n\n    /**\n     * Returns new data Resource for given key exposing builder design pattern\n     * designed for complex nested data structures\n     * @param {string} key\n     * @returns {any}\n     */\n    public load(key: string): Resource<any> {\n        return new Resource(this, key);\n    }\n\n    public set<T>(key: string, value: T): T {\n        return this.utility.set(key, value);\n    }\n\n    public update(key: string, changes: any): any {\n        const value = this.get(key);\n        if (value !== undefined && typeof value !== 'object') {\n            debug.throw(new Error(`Value stored under \"${key}\" key is not an object and tried to be updated.`));\n            return value;\n        }\n        return this.set(key, merge({}, value, changes));\n    }\n\n    // TODO return true if item existed and false otherwise (?)\n    public remove(key: string): void {\n        return this.utility.remove(key);\n    }\n\n    public observe(key?: string, exactMatch?: boolean) {\n        return this._changes.pipe(\n            filter((event: NgxStorageEvent) => {\n                if (!key) { return true; }\n                if (exactMatch) {\n                    if (key.startsWith(Config.prefix)) {\n                        return event.key === key;\n                    }\n                    return event.key === Config.prefix + key;\n                } else {\n                    return event.key.indexOf(key) !== -1;\n                }\n            }),\n            delay(30) // event should come after actual data change and propagation\n        );\n    }\n\n    /**\n     * Clears chosen data from Storage\n     * @param clearType 'prefix' | 'decorators' | 'all'\n     * @param prefixOrClass defines the prefix or class (not its instance) whose decorators should be cleared\n     */\n    public clear(clearType?: ClearType, prefixOrClass?: string | object): void {\n        clearType = clearType || Config.clearType;\n        if (clearType === 'decorators') {\n            let keys = [];\n            if (typeof prefixOrClass === 'object') {\n                keys = this.keys.filter(key => Cache.get(key).targets.indexOf(prefixOrClass) !== -1);\n                debug.log(this.utility.getStorageName() + ' > Removing decorated data from ' + prefixOrClass.constructor.name + ':', keys);\n            } else {\n                keys = this.keys;\n                debug.log(this.utility.getStorageName() + ' > Removing decorated data:', keys);\n            }\n            keys.forEach(key => this.remove(key));\n        } else if (clearType === 'prefix') {\n            prefixOrClass = prefixOrClass || this.utility.prefix;\n            this.utility.forEach((value, key) => {\n                if (key.startsWith(<string>prefixOrClass)) {\n                    this.remove(this.utility.trimPrefix(key));\n                }\n            });\n        } else if (clearType === 'all') {\n            this.utility.clear();\n        }\n    }\n\n    protected generateEvent(key: string, newValue: any, oldValue?: any): NgxStorageEvent {\n        const type = this.utility.getStorageName().charAt(0).toLowerCase() + this.utility.getStorageName().slice(1);\n        const event = new NgxStorageEvent(type, key, this.utility.getStorage());\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n        event.newValue = newValue;\n        return event;\n    }\n\n    protected mapNativeEvent(ev: StorageEvent): NgxStorageEvent {\n        const event = this.generateEvent(ev.key, this.utility.getGettable(ev.newValue), this.utility.getGettable(ev.oldValue));\n        event.isInternal = false;\n        return event;\n    }\n}\n","import { NgxStorageEvent } from './storage-event';\nimport { Subject } from 'rxjs';\nimport { StorageName } from '../webstorage.utility';\n\n// TODO: in the future use ES6 Proxy to handle indexers\nexport abstract class NgxStorage implements Storage {\n    [key: string]: any;\n    [index: number]: string;\n    public externalChanges: Subject<NgxStorageEvent> = new Subject();\n    public abstract setItem(key: string, value: any): void;\n    public abstract removeItem(key: string): void;\n    public abstract getItem(key: string): any;\n    public abstract key(index: number);\n    public abstract clear(): void;\n    public abstract get length(): number;\n    public abstract get type(): StorageName;\n\n    protected emitEvent(key: string, newValue: any, oldValue?: any) {\n        const event = new NgxStorageEvent(this.type, key, this);\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.getItem(key);\n        event.newValue = newValue;\n        event.isInternal = false;\n        this.externalChanges.next(event);\n    }\n}\n","import { Config, debug } from '../../config/index';\nimport { NgxStorage } from './storage';\nimport { StorageName, WebStorageUtility } from '../webstorage.utility';\nimport { Observable, interval } from 'rxjs';\n\nexport interface WebStorage extends Storage {\n   setItem(key: string, data: string, expirationDate?: Date): void;\n}\n\nexport class CookiesStorage extends NgxStorage {\n    protected cachedCookieString: string;\n    protected cachedItemsMap: Map<string, string>;\n\n    constructor() {\n        super();\n        this.getAllItems();\n        if (Config.cookiesCheckInterval) {\n            interval(Config.cookiesCheckInterval)\n                .subscribe(() => {\n                    if (!this.externalChanges.observers.length) {\n                        return; // don't run if there are no set subscriptions\n                    }\n                    this.getAllItems();\n                });\n        }\n    }\n\n    public get type(): StorageName {\n        return 'cookiesStorage';\n    }\n\n    public get length(): number {\n        return this.getAllKeys().length;\n    }\n\n    public key(index: number): string | any {\n        return this.getAllKeys()[index];\n    }\n\n    public getItem(key: string): string | any {\n        return this.getAllItems().get(key);\n    }\n\n    public removeItem(key: string): void {\n        if (typeof document === 'undefined') return;\n        let domain = this.resolveDomain(Config.cookiesScope);\n        domain = (domain) ? 'domain=' + domain + ';' : '';\n        document.cookie = key + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;' + domain;\n        this.cachedItemsMap.delete(key);\n    }\n\n    /**\n     * @param key\n     * @param value\n     * @param expirationDate passing null affects in lifetime cookie\n     */\n    public setItem(key: string, value: string, expirationDate?: Date): void {\n        if (typeof document === 'undefined') return;\n        let domain = this.resolveDomain(Config.cookiesScope);\n        debug.log('Cookies domain:', domain);\n        domain = (domain) ? 'domain=' + domain + ';' : '';\n        let utcDate = '';\n        if (expirationDate instanceof Date) {\n            utcDate = expirationDate.toUTCString();\n        } else if (expirationDate === null) {\n            utcDate = 'Fri, 18 Dec 2099 12:00:00 GMT';\n        }\n        const expires = utcDate ? '; expires=' + utcDate : '';\n        const cookie = key + '=' + value + expires + ';path=/;' + domain;\n        debug.log('Cookie`s set instruction:', cookie);\n        this.cachedItemsMap.set(key, value);\n        document.cookie = cookie;\n    }\n\n    public clear(): void {\n        this.getAllKeys().forEach(key => this.removeItem(key));\n    }\n\n    public forEach(callbackFn: (value: string, key: string) => any): void {\n        return this.getAllItems().forEach((value, key) => callbackFn(value, key));\n    }\n\n    protected getAllKeys(): Array<string> {\n        return Array.from(this.getAllItems().keys());\n    }\n\n    // TODO: consider getting cookies from all paths\n    protected getAllItems(): Map<string, string> {\n        if (this.cachedCookieString === document.cookie) { // No changes\n            return this.cachedItemsMap;\n        }\n        const map = new Map();\n        if (typeof document === 'undefined') return map;\n        const cookies = document.cookie.split(';');\n\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            const eqPos = cookie.indexOf('=');\n            const key = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            const value = eqPos > -1 ? cookie.substr(eqPos + 1, cookie.length) : cookie;\n            map.set(key, value);\n        }\n        // detect changes and emit events\n        if (this.cachedItemsMap) {\n            map.forEach((value, key) => {\n                let cachedValue = this.cachedItemsMap.get(key);\n                cachedValue = (cachedValue !== undefined) ? cachedValue : null;\n                if (value !== cachedValue) {\n                    this.emitEvent(\n                        key,\n                        WebStorageUtility.getGettable(value),\n                        WebStorageUtility.getGettable(cachedValue),\n                    );\n                }\n            });\n            this.cachedItemsMap.forEach((value, key) => {\n                if (!map.has(key)) {\n                    this.emitEvent(key, null, WebStorageUtility.getGettable(value));\n                }\n            });\n        }\n        this.cachedCookieString = document.cookie;\n        return this.cachedItemsMap = map;\n    }\n\n    /**\n     * domain.com         + path=\".\"          = .domain.com\n     * domain.com         + path=\".sub.\"      = .sub.domain.com\n     * sub.domain.com     + path=\"sub.\"       = sub.domain.com\n     * www.sub.domain.com + path=\".\"          = .sub.domain.com\n     * localhost          + path=\".whatever.\" = localhost\n     * @param path\n     */\n    protected resolveDomain(path: string): string {\n        if (!path) return '';\n        const hostname = document.domain;\n        if ((hostname.match(/\\./g) || []).length < 1) {\n            return '';\n        }\n        const www = (path[0] !== '.' && hostname.indexOf('www.') === 0) ? 'www.' : '';\n        return www + path + this.getDomain();\n    }\n\n    /**\n     * This function determines base domain by setting cookie at the highest level possible\n     * @url http://rossscrivener.co.uk/blog/javascript-get-domain-exclude-subdomain\n     */\n    protected getDomain(): string {\n        let i = 0;\n        let domain = document.domain;\n        const domainParts = domain.split('.');\n        const s = '_gd' + (new Date()).getTime();\n        while (i < (domainParts.length - 1) && document.cookie.indexOf(s + '=' + s) === -1) {\n            domain = domainParts.slice(-1 - (++i)).join('.');\n            document.cookie = s + '=' + s + ';domain=' + domain + ';';\n        }\n        document.cookie = s + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + domain + ';';\n        return domain;\n    }\n}\n\nexport const cookiesStorage = new CookiesStorage();\n","import { WebStorageUtility } from './webstorage.utility';\n\nexport class SharedStorageUtility extends WebStorageUtility {\n    public getSettable(value: any): any {\n        return value;\n    }\n\n    public getGettable(value: any): any {\n        return value;\n    }\n}\n","import { NgxStorage } from './storage';\nimport { StorageName } from '../webstorage.utility';\n\nexport class SharedStorage extends NgxStorage {\n    protected sharedMap: Map<string, any> = new Map();\n\n    constructor() {\n        super();\n        this.externalChanges = undefined;\n    }\n\n    public get type(): StorageName {\n        return 'sharedStorage';\n    }\n\n    public get length(): number {\n        return this.getAllKeys().length;\n    }\n\n    public key(index: number): string | any {\n        return this.getAllKeys()[index];\n    }\n\n    public getItem(key: string): any {\n        const value = this.sharedMap.get(key);\n        return (value !== undefined) ? value : null;\n    }\n\n    public removeItem(key: string): void {\n        this.sharedMap.delete(key);\n    }\n\n    public setItem(key: string, value: any): void {\n        this.sharedMap.set(key, value);\n    }\n\n    public clear(): void {\n        this.sharedMap.clear();\n    }\n\n    public forEach(func: (value: string, key: any) => any): void {\n        return this.sharedMap.forEach((value, key) => func(value, key));\n    }\n\n    protected getAllKeys(): Array<string> {\n        return Array.from(this.sharedMap.keys());\n    }\n}\n\nexport const sharedStorage = new SharedStorage();\n","import { Config } from '../config/index';\nimport { WebStorageUtility } from './webstorage.utility';\nimport { cookiesStorage } from './storage/cookies-storage';\nimport { SharedStorageUtility } from './shared-storage.utility';\nimport { sharedStorage } from './storage/shared-storage';\n\nexport const localStorageUtility: WebStorageUtility =\n    new WebStorageUtility(localStorage, Config.prefix, Config.previousPrefix);\nexport const sessionStorageUtility: WebStorageUtility =\n    new WebStorageUtility(sessionStorage, Config.prefix, Config.previousPrefix);\nexport const cookiesStorageUtility: WebStorageUtility =\n    new WebStorageUtility(cookiesStorage, Config.prefix, Config.previousPrefix);\nexport const sharedStorageUtility: SharedStorageUtility =\n    new SharedStorageUtility(sharedStorage, Config.prefix, Config.prefix);\n","import { WebStorageService } from './webstorage.service';\nimport { localStorageUtility } from '../utility/index';\nimport { Injectable } from '@angular/core';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\n\n@Injectable()\nexport class LocalStorageService extends WebStorageService {\n    public static keys: Array<string> = [];\n\n    constructor() {\n        super(localStorageUtility);\n        this._changes =\n            merge(fromEvent<NgxStorageEvent>(window, 'storage')\n                  .pipe(\n                      filter((event: NgxStorageEvent) => event.storageArea === localStorage),\n                      map((event: NgxStorageEvent) => this.mapNativeEvent(event))\n                  ),\n                  localStorageUtility.changes);\n    }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { sessionStorageUtility } from '../utility/index';\nimport { Injectable } from '@angular/core';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\n\n@Injectable()\nexport class SessionStorageService extends WebStorageService {\n    public static keys: Array<string> = [];\n\n    constructor() {\n        super(sessionStorageUtility);\n        this._changes =\n            merge(fromEvent<NgxStorageEvent>(window, 'storage')\n                  .pipe(\n                      filter((event: NgxStorageEvent) => event.storageArea === sessionStorage),\n                      map((event: NgxStorageEvent) => this.mapNativeEvent(event))\n                  ),\n                  sessionStorageUtility.changes);\n    }\n}\n","import { cookiesStorage } from '../utility/storage/cookies-storage';\nimport { WebStorageService } from './webstorage.service';\nimport { cookiesStorageUtility } from '../utility/index';\nimport { merge } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookiesStorageService extends WebStorageService {\n    public static keys: Array<string> = [];\n\n    constructor() {\n        super(cookiesStorageUtility);\n        this._changes =\n             merge(cookiesStorage.externalChanges.asObservable(),\n                   cookiesStorageUtility.changes);\n    }\n\n    public set<T>(key: string, value: T, expirationDate?: Date): T {\n        return this.utility.set(key, value, { expires: expirationDate });\n    }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { sharedStorageUtility } from '../utility/index';\nimport { Injectable } from '@angular/core';\nimport { sharedStorage } from '../utility/storage/shared-storage';\n\n@Injectable()\nexport class SharedStorageService extends WebStorageService {\n    public static keys: Array<string> = [];\n\n    constructor() {\n        super(sharedStorageUtility);\n        this._changes = sharedStorageUtility.changes;\n    }\n}\n","import {\n    CookiesStorageService,\n    LocalStorageService,\n    SessionStorageService,\n    WebStorageServiceInterface\n} from '../service/index';\nimport { cookiesStorageUtility, localStorageUtility, sessionStorageUtility, sharedStorageUtility } from '../utility/index';\nimport { SharedStorageService } from '../service/shared-storage.service';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\nimport { Cache } from './cache';\nimport {\n    CookieStorageDecoratorConfig, DecoratorConfig, LocalStorageDecoratorConfig,\n    SessionStorageDecoratorConfig, WebStorageDecoratorConfig\n} from '../ngx-store.types';\n\nexport function LocalStorage(keyOrConfig?: string | LocalStorageDecoratorConfig,\n                             config?: LocalStorageDecoratorConfig) {\n    return WebStorage(localStorageUtility, LocalStorageService, keyOrConfig, config);\n}\nexport function SessionStorage(keyOrConfig?: string | SessionStorageDecoratorConfig,\n                               config?: SessionStorageDecoratorConfig) {\n    return WebStorage(sessionStorageUtility, SessionStorageService, keyOrConfig, config);\n}\nexport function CookieStorage(keyOrConfig?: string | CookieStorageDecoratorConfig,\n                              config?: CookieStorageDecoratorConfig) {\n    return WebStorage(cookiesStorageUtility, CookiesStorageService, keyOrConfig, config);\n}\nexport function SharedStorage(keyOrConfig?: string | WebStorageDecoratorConfig,\n                              config?: WebStorageDecoratorConfig) {\n    return WebStorage(sharedStorageUtility, SharedStorageService, keyOrConfig, config);\n}\n\nfunction WebStorage(\n    webStorageUtility: WebStorageUtility,\n    service: WebStorageServiceInterface,\n    keyOrConfig: string | DecoratorConfig,\n    config: DecoratorConfig = {}\n) {\n    return (target: any, propertyName: string): void => {\n        let key: string;\n        if (typeof keyOrConfig === 'object') {\n            key = keyOrConfig.key;\n            config = keyOrConfig;\n        } else if (typeof keyOrConfig === 'string') {\n            key = keyOrConfig;\n        }\n        key = key || config.key || propertyName;\n\n        let cacheItem = Cache.getCacheFor({\n            key: key,\n            name: propertyName,\n            targets: [ target ],\n            services: [ service ],\n            utilities: [{\n                utility: webStorageUtility,\n                config: config,\n            }],\n        });\n\n        Object.defineProperty(target, propertyName, {\n            get: function() {\n                return cacheItem.getProxy(undefined, config);\n            },\n            set: function(value: any) {\n                if (!Cache.get(cacheItem.key)) {\n                    cacheItem = Cache.getCacheFor(cacheItem);\n                }\n                cacheItem.addTargets([target]);\n                cacheItem.currentTarget = target;\n                cacheItem.saveValue(value, config);\n            },\n        });\n        return target;\n    };\n}\n","// Public classes.\nimport { NgModule } from '@angular/core';\nimport { WebStorageService, CookiesStorageService, LocalStorageService, SessionStorageService, SharedStorageService } from './service/index';\n\nexport { CookieStorage, LocalStorage, SessionStorage, SharedStorage, SharedStorage as TempStorage } from './decorator/webstorage';\nexport { WebStorageService, CookiesStorageService, LocalStorageService, SessionStorageService, SharedStorageService, SharedStorageService as TempStorageService } from './service/index';\nexport { WebStorageConfigInterface } from './config/index';\nexport { Webstorable, WebstorableArray, WebstorableObject } from './ngx-store.types';\nexport { NgxStorageEvent } from './utility/storage/storage-event';\nexport { Resource as NgxResource } from './service/resource';\n\n@NgModule({\n    providers: [\n        LocalStorageService,\n        SessionStorageService,\n        CookiesStorageService,\n        SharedStorageService,\n    ]\n})\nexport class WebStorageModule {}\n","/**\n * Angular library starter\n * Build an Angular library compatible with AoT compilation & Tree shaking like an official package\n * Copyright Roberto Simonetti\n * MIT license\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport * from './src/ngx-store';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n"],"names":["merge","__extends","map"],"mappings":"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"}