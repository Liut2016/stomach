{"version":3,"file":"completer-filter.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/filter/filter-types/completer-filter.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAEjD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,wCAAwC,CAAC;AAChD,OAAO,gCAAgC,CAAC;AAexC,IAAa,wBAAwB;IAAS,4CAAa;IAIzD,kCAAoB,gBAAkC;QAAtD,YACE,iBAAO,SACR;QAFmB,sBAAgB,GAAhB,gBAAgB,CAAkB;QAFtD,sBAAgB,GAAG,IAAI,OAAO,EAAO,CAAC;;IAItC,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAaC;QAZC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC;QACvD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QACtG,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAE7D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB;aAC7C,GAAG,CAAC,UAAC,EAAO,IAAK,OAAA,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAA5B,CAA4B,CAAC;aAC9C,oBAAoB,EAAE;aACtB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aACxB,SAAS,CAAC,UAAC,MAAc;YACxB,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAgB,GAAhB,UAAiB,KAAa;QAC5B,+EAA+E;QAC/E,iGAAiG;QACjG,kCAAkC;QAClC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IACH,+BAAC;AAAD,CAAC,AA/BD,CAA8C,aAAa,GA+B1D;AA/BY,wBAAwB;IAbpC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,wjBAST;KACF,CAAC;qCAKsC,gBAAgB;GAJ3C,wBAAwB,CA+BpC;SA/BY,wBAAwB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { CompleterService } from 'ng2-completer';\n\nimport { DefaultFilter } from './default-filter';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/debounceTime';\n\n@Component({\n  selector: 'completer-filter',\n  template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n})\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\n\n  completerContent = new Subject<any>();\n\n  constructor(private completerService: CompleterService) {\n    super();\n  }\n\n  ngOnInit() {\n    const config = this.column.getFilterConfig().completer;\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n    config.dataService.descriptionField(config.descriptionField);\n\n    this.changesSubscription = this.completerContent\n      .map((ev: any) => (ev && ev.title) || ev || '')\n      .distinctUntilChanged()\n      .debounceTime(this.delay)\n      .subscribe((search: string) => {\n        this.query = search;\n        this.setFilter();\n      });\n  }\n\n  inputTextChanged(event: string) {\n    // workaround to trigger the search event when the home/end buttons are clicked\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n    // so here it gets called manually\n    if (event === '') {\n      this.completerContent.next(event);\n    }\n  }\n}\n"]}