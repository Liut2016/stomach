{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/footer/pager.component.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/footer/pager.component.js","mtime":1511963642000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar DataTablePagerComponent = /*@__PURE__*/ (function () {\n    function DataTablePagerComponent() {\n        this.change = new core_1.EventEmitter();\n        this._count = 0;\n        this._page = 1;\n        this._size = 0;\n    }\n    Object.defineProperty(DataTablePagerComponent.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        set: function (val) {\n            this._size = val;\n            this.pages = this.calcPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagerComponent.prototype, \"count\", {\n        get: function () {\n            return this._count;\n        },\n        set: function (val) {\n            this._count = val;\n            this.pages = this.calcPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagerComponent.prototype, \"page\", {\n        get: function () {\n            return this._page;\n        },\n        set: function (val) {\n            this._page = val;\n            this.pages = this.calcPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagerComponent.prototype, \"totalPages\", {\n        get: function () {\n            var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n            return Math.max(count || 0, 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTablePagerComponent.prototype.canPrevious = function () {\n        return this.page > 1;\n    };\n    DataTablePagerComponent.prototype.canNext = function () {\n        return this.page < this.totalPages;\n    };\n    DataTablePagerComponent.prototype.prevPage = function () {\n        this.selectPage(this.page - 1);\n    };\n    DataTablePagerComponent.prototype.nextPage = function () {\n        this.selectPage(this.page + 1);\n    };\n    DataTablePagerComponent.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.totalPages && page !== this.page) {\n            this.page = page;\n            this.change.emit({\n                page: page\n            });\n        }\n    };\n    DataTablePagerComponent.prototype.calcPages = function (page) {\n        var pages = [];\n        var startPage = 1;\n        var endPage = this.totalPages;\n        var maxSize = 5;\n        var isMaxSized = maxSize < this.totalPages;\n        page = page || this.page;\n        if (isMaxSized) {\n            startPage = page - Math.floor(maxSize / 2);\n            endPage = page + Math.floor(maxSize / 2);\n            if (startPage < 1) {\n                startPage = 1;\n                endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n            }\n            else if (endPage > this.totalPages) {\n                startPage = Math.max(this.totalPages - maxSize + 1, 1);\n                endPage = this.totalPages;\n            }\n        }\n        for (var num = startPage; num <= endPage; num++) {\n            pages.push({\n                number: num,\n                text: num\n            });\n        }\n        return pages;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTablePagerComponent.prototype, \"pagerLeftArrowIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTablePagerComponent.prototype, \"pagerRightArrowIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTablePagerComponent.prototype, \"pagerPreviousIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTablePagerComponent.prototype, \"pagerNextIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTablePagerComponent.prototype, \"size\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTablePagerComponent.prototype, \"count\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTablePagerComponent.prototype, \"page\", null);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTablePagerComponent.prototype, \"change\", void 0);\n    DataTablePagerComponent = __decorate([\n        core_1.Component({\n            selector: 'datatable-pager',\n            template: \"\\n    <ul class=\\\"pager\\\">\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"selectPage(1)\\\">\\n          <i class=\\\"{{pagerPreviousIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"prevPage()\\\">\\n          <i class=\\\"{{pagerLeftArrowIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li\\n        class=\\\"pages\\\"\\n        *ngFor=\\\"let pg of pages\\\"\\n        [class.active]=\\\"pg.number === page\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"selectPage(pg.number)\\\">\\n          {{pg.text}}\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"nextPage()\\\">\\n          <i class=\\\"{{pagerRightArrowIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"selectPage(totalPages)\\\">\\n          <i class=\\\"{{pagerNextIcon}}\\\"></i>\\n        </a>\\n      </li>\\n    </ul>\\n  \",\n            host: {\n                class: 'datatable-pager'\n            },\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\n        })\n    ], DataTablePagerComponent);\n    return DataTablePagerComponent;\n}());\nexports.DataTablePagerComponent = DataTablePagerComponent;\n",null]}