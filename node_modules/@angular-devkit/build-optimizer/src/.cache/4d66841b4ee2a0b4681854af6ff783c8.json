{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/header/header.component.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/header/header.component.js","mtime":1511963642000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar types_1 = require(\"../../types\");\nvar utils_1 = require(\"../../utils\");\nvar DataTableHeaderComponent = /*@__PURE__*/ (function () {\n    function DataTableHeaderComponent(cd) {\n        this.cd = cd;\n        this.sort = new core_1.EventEmitter();\n        this.reorder = new core_1.EventEmitter();\n        this.resize = new core_1.EventEmitter();\n        this.select = new core_1.EventEmitter();\n        this.columnContextmenu = new core_1.EventEmitter(false);\n        this._styleByGroup = {\n            left: {},\n            center: {},\n            right: {}\n        };\n    }\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"innerWidth\", {\n        get: function () {\n            return this._innerWidth;\n        },\n        set: function (val) {\n            this._innerWidth = val;\n            if (this._columns) {\n                var colByPin = utils_1.columnsByPin(this._columns);\n                this._columnGroupWidths = utils_1.columnGroupWidths(colByPin, this._columns);\n                this.setStylesByGroup();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"headerHeight\", {\n        get: function () {\n            return this._headerHeight;\n        },\n        set: function (val) {\n            if (val !== 'auto') {\n                this._headerHeight = val + \"px\";\n            }\n            else {\n                this._headerHeight = val;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"columns\", {\n        get: function () {\n            return this._columns;\n        },\n        set: function (val) {\n            this._columns = val;\n            var colsByPin = utils_1.columnsByPin(val);\n            this._columnsByPin = utils_1.columnsByPinArr(val);\n            this._columnGroupWidths = utils_1.columnGroupWidths(colsByPin, val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"offsetX\", {\n        get: function () { return this._offsetX; },\n        set: function (val) {\n            this._offsetX = val;\n            this.setStylesByGroup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableHeaderComponent.prototype.onLongPressStart = function (_a) {\n        var event = _a.event, model = _a.model;\n        model.dragging = true;\n        this.dragEventTarget = event;\n    };\n    DataTableHeaderComponent.prototype.onLongPressEnd = function (_a) {\n        var event = _a.event, model = _a.model;\n        this.dragEventTarget = event;\n        // delay resetting so sort can be\n        // prevented if we were dragging\n        setTimeout(function () {\n            model.dragging = false;\n        }, 5);\n    };\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"headerWidth\", {\n        get: function () {\n            if (this.scrollbarH) {\n                return this.innerWidth + 'px';\n            }\n            return '100%';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableHeaderComponent.prototype.trackByGroups = function (index, colGroup) {\n        return colGroup.type;\n    };\n    DataTableHeaderComponent.prototype.columnTrackingFn = function (index, column) {\n        return column.$$id;\n    };\n    DataTableHeaderComponent.prototype.onColumnResized = function (width, column) {\n        if (width <= column.minWidth) {\n            width = column.minWidth;\n        }\n        else if (width >= column.maxWidth) {\n            width = column.maxWidth;\n        }\n        this.resize.emit({\n            column: column,\n            prevValue: column.width,\n            newValue: width\n        });\n    };\n    DataTableHeaderComponent.prototype.onColumnReordered = function (_a) {\n        var prevIndex = _a.prevIndex, newIndex = _a.newIndex, model = _a.model;\n        this.reorder.emit({\n            column: model,\n            prevValue: prevIndex,\n            newValue: newIndex\n        });\n    };\n    DataTableHeaderComponent.prototype.onSort = function (_a) {\n        var column = _a.column, prevValue = _a.prevValue, newValue = _a.newValue;\n        // if we are dragging don't sort!\n        if (column.dragging)\n            return;\n        var sorts = this.calcNewSorts(column, prevValue, newValue);\n        this.sort.emit({\n            sorts: sorts,\n            column: column,\n            prevValue: prevValue,\n            newValue: newValue\n        });\n    };\n    DataTableHeaderComponent.prototype.calcNewSorts = function (column, prevValue, newValue) {\n        var idx = 0;\n        if (!this.sorts) {\n            this.sorts = [];\n        }\n        var sorts = this.sorts.map(function (s, i) {\n            s = __assign({}, s);\n            if (s.prop === column.prop)\n                idx = i;\n            return s;\n        });\n        if (newValue === undefined) {\n            sorts.splice(idx, 1);\n        }\n        else if (prevValue) {\n            sorts[idx].dir = newValue;\n        }\n        else {\n            if (this.sortType === types_1.SortType.single) {\n                sorts.splice(0, this.sorts.length);\n            }\n            sorts.push({ dir: newValue, prop: column.prop });\n        }\n        return sorts;\n    };\n    DataTableHeaderComponent.prototype.setStylesByGroup = function () {\n        this._styleByGroup['left'] = this.calcStylesByGroup('left');\n        this._styleByGroup['center'] = this.calcStylesByGroup('center');\n        this._styleByGroup['right'] = this.calcStylesByGroup('right');\n        this.cd.detectChanges();\n    };\n    DataTableHeaderComponent.prototype.calcStylesByGroup = function (group) {\n        var widths = this._columnGroupWidths;\n        var offsetX = this.offsetX;\n        var styles = {\n            width: widths[group] + \"px\"\n        };\n        if (group === 'center') {\n            utils_1.translateXY(styles, offsetX * -1, 0);\n        }\n        else if (group === 'right') {\n            var totalDiff = widths.total - this.innerWidth;\n            var offset = totalDiff * -1;\n            utils_1.translateXY(styles, offset, 0);\n        }\n        return styles;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableHeaderComponent.prototype, \"sortAscendingIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableHeaderComponent.prototype, \"sortDescendingIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableHeaderComponent.prototype, \"scrollbarH\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableHeaderComponent.prototype, \"dealsWithGroup\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTableHeaderComponent.prototype, \"innerWidth\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], DataTableHeaderComponent.prototype, \"sorts\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTableHeaderComponent.prototype, \"sortType\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableHeaderComponent.prototype, \"allRowsSelected\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTableHeaderComponent.prototype, \"selectionType\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableHeaderComponent.prototype, \"reorderable\", void 0);\n    __decorate([\n        core_1.HostBinding('style.height'),\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DataTableHeaderComponent.prototype, \"headerHeight\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], DataTableHeaderComponent.prototype, \"columns\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTableHeaderComponent.prototype, \"offsetX\", null);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableHeaderComponent.prototype, \"sort\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableHeaderComponent.prototype, \"reorder\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableHeaderComponent.prototype, \"resize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableHeaderComponent.prototype, \"select\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", Object)\n    ], DataTableHeaderComponent.prototype, \"columnContextmenu\", void 0);\n    __decorate([\n        core_1.HostBinding('style.width'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableHeaderComponent.prototype, \"headerWidth\", null);\n    DataTableHeaderComponent = __decorate([\n        core_1.Component({\n            selector: 'datatable-header',\n            template: \"\\n    <div\\n      orderable\\n      (reorder)=\\\"onColumnReordered($event)\\\"\\n      [style.width.px]=\\\"_columnGroupWidths.total\\\"\\n      class=\\\"datatable-header-inner\\\">\\n      <div\\n        *ngFor=\\\"let colGroup of _columnsByPin; trackBy: trackByGroups\\\"\\n        [class]=\\\"'datatable-row-' + colGroup.type\\\"\\n        [ngStyle]=\\\"_styleByGroup[colGroup.type]\\\">\\n        <datatable-header-cell\\n          *ngFor=\\\"let column of colGroup.columns; trackBy: columnTrackingFn\\\"\\n          resizeable\\n          [resizeEnabled]=\\\"column.resizeable\\\"\\n          (resize)=\\\"onColumnResized($event, column)\\\"\\n          long-press\\n          [pressModel]=\\\"column\\\"\\n          [pressEnabled]=\\\"reorderable && column.draggable\\\"\\n          (longPressStart)=\\\"onLongPressStart($event)\\\"\\n          (longPressEnd)=\\\"onLongPressEnd($event)\\\"\\n          draggable\\n          [dragX]=\\\"reorderable && column.draggable && column.dragging\\\"\\n          [dragY]=\\\"false\\\"\\n          [dragModel]=\\\"column\\\"\\n          [dragEventTarget]=\\\"dragEventTarget\\\"\\n          [headerHeight]=\\\"headerHeight\\\"\\n          [column]=\\\"column\\\"\\n          [sortType]=\\\"sortType\\\"\\n          [sorts]=\\\"sorts\\\"\\n          [selectionType]=\\\"selectionType\\\"\\n          [sortAscendingIcon]=\\\"sortAscendingIcon\\\"\\n          [sortDescendingIcon]=\\\"sortDescendingIcon\\\"\\n          [allRowsSelected]=\\\"allRowsSelected\\\"\\n          (sort)=\\\"onSort($event)\\\"\\n          (select)=\\\"select.emit($event)\\\"\\n          (columnContextmenu)=\\\"columnContextmenu.emit($event)\\\">\\n        </datatable-header-cell>\\n      </div>\\n    </div>\\n  \",\n            host: {\n                class: 'datatable-header'\n            },\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\n        })\n    ], DataTableHeaderComponent);\n    return DataTableHeaderComponent;\n}());\nexports.DataTableHeaderComponent = DataTableHeaderComponent;\n",null]}