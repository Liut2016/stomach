{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/ngx-store/src/utility/storage/storage.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/ngx-store/src/utility/storage/storage.js","mtime":1526508791000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["import { NgxStorageEvent } from './storage-event';\nimport { Subject } from 'rxjs';\n// TODO: in the future use ES6 Proxy to handle indexers\nvar \n// TODO: in the future use ES6 Proxy to handle indexers\nNgxStorage = /** @class */ (function () {\n    function NgxStorage() {\n        this.externalChanges = new Subject();\n    }\n    NgxStorage.prototype.emitEvent = function (key, newValue, oldValue) {\n        var event = new NgxStorageEvent(this.type, key, this);\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.getItem(key);\n        event.newValue = newValue;\n        event.isInternal = false;\n        this.externalChanges.next(event);\n    };\n    return NgxStorage;\n}());\n// TODO: in the future use ES6 Proxy to handle indexers\nexport { NgxStorage };\n//# sourceMappingURL=storage.js.map",null]}