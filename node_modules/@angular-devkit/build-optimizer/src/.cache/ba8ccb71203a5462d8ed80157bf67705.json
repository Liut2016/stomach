{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/@angular/material/esm5/button.es5.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/@angular/material/esm5/button.es5.js","mtime":1526941038000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START tslib,_angular_cdk_a11y,_angular_cdk_platform,_angular_core,_angular_material_core,_angular_common PURE_IMPORTS_END */\nimport { __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Platform } from '@angular/cdk/platform';\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { MatRipple, mixinColor, mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n */\nvar /** @type {?} */ DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * Default color palette for flat buttons (mat-flat-button)\n */\nvar /** @type {?} */ DEFAULT_FLAT_BUTTON_COLOR = 'primary';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nvar /** @type {?} */ BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n/**\n * \\@docs-private\n */\nvar /**\n * \\@docs-private\n */ MatButtonBase = /*@__PURE__*/ (function () {\n    function MatButtonBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatButtonBase;\n}());\nvar /** @type {?} */ _MatButtonMixinBase = /*@__PURE__*/ mixinColor(/*@__PURE__*/ mixinDisabled(/*@__PURE__*/ mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nvar MatButton = /*@__PURE__*/ (function (_super) {\n    __extends(MatButton, _super);\n    function MatButton(elementRef, _platform, _focusMonitor) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._platform = _platform;\n        _this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the button is round.\n         */\n        _this.isRoundButton = _this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        _this.isIconButton = _this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is prevent in the button's host\n        // attributes, add the correct corresponding class.\n        for (var _i = 0, BUTTON_HOST_ATTRIBUTES_1 = BUTTON_HOST_ATTRIBUTES; _i < BUTTON_HOST_ATTRIBUTES_1.length; _i++) {\n            var attr = BUTTON_HOST_ATTRIBUTES_1[_i];\n            if (_this._hasHostAttributes(attr)) {\n                ((elementRef.nativeElement)).classList.add(attr);\n            }\n        }\n        _this._focusMonitor.monitor(_this._elementRef.nativeElement, true);\n        if (_this.isRoundButton) {\n            _this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n        else if (_this._hasHostAttributes('mat-flat-button')) {\n            _this.color = DEFAULT_FLAT_BUTTON_COLOR;\n        }\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        };\n    /** Focuses the button. */\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MatButton.prototype.focus = /**\n     * Focuses the button.\n     * @return {?}\n     */\n        function () {\n            this._getHostElement().focus();\n        };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._getHostElement = /**\n     * @return {?}\n     */\n        function () {\n            return this._elementRef.nativeElement;\n        };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n        function () {\n            return this.disableRipple || this.disabled;\n        };\n    /** Gets whether the button has one of the given attributes. */\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    MatButton.prototype._hasHostAttributes = /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var attributes = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                attributes[_i] = arguments[_i];\n            }\n            return attributes.some(function (attribute) { return _this._getHostElement().hasAttribute(attribute); });\n        };\n    return MatButton;\n}(_MatButtonMixinBase));\n/**\n * Raised Material design button.\n */\nvar MatAnchor = /*@__PURE__*/ (function (_super) {\n    __extends(MatAnchor, _super);\n    function MatAnchor(platform, focusMonitor, elementRef) {\n        return _super.call(this, elementRef, platform, focusMonitor) || this;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAnchor.prototype._haltDisabledEvents = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n    return MatAnchor;\n}(MatButton));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatButtonModule = /*@__PURE__*/ (function () {\n    function MatButtonModule() {\n    }\n    return MatButtonModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { MatButtonModule, MatButtonBase, _MatButtonMixinBase, MatButton, MatAnchor };\n//# sourceMappingURL=button.es5.js.map\n",null]}