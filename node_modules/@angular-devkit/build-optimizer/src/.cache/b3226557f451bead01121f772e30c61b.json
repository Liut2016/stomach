{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/header/header-cell.component.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/header/header-cell.component.js","mtime":1511963642000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar types_1 = require(\"../../types\");\nvar utils_1 = require(\"../../utils\");\nvar events_1 = require(\"../../events\");\nvar DataTableHeaderCellComponent = /*@__PURE__*/ (function () {\n    function DataTableHeaderCellComponent(cd) {\n        this.cd = cd;\n        this.sort = new core_1.EventEmitter();\n        this.select = new core_1.EventEmitter();\n        this.columnContextmenu = new core_1.EventEmitter(false);\n        this.sortFn = this.onSort.bind(this);\n        this.selectFn = this.select.emit.bind(this.select);\n        this.cellContext = {\n            column: this.column,\n            sortDir: this.sortDir,\n            sortFn: this.sortFn,\n            allRowsSelected: this.allRowsSelected,\n            selectFn: this.selectFn\n        };\n    }\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"allRowsSelected\", {\n        get: function () {\n            return this._allRowsSelected;\n        },\n        set: function (value) {\n            this._allRowsSelected = value;\n            this.cellContext.allRowsSelected = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"column\", {\n        get: function () {\n            return this._column;\n        },\n        set: function (column) {\n            this._column = column;\n            this.cellContext.column = column;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"sorts\", {\n        get: function () {\n            return this._sorts;\n        },\n        set: function (val) {\n            this._sorts = val;\n            this.sortDir = this.calcSortDir(val);\n            this.sortClass = this.calcSortClass(this.sortDir);\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"columnCssClasses\", {\n        get: function () {\n            var cls = 'datatable-header-cell';\n            if (this.column.sortable)\n                cls += ' sortable';\n            if (this.column.resizeable)\n                cls += ' resizeable';\n            if (this.column.headerClass) {\n                if (typeof this.column.headerClass === 'string') {\n                    cls += ' ' + this.column.headerClass;\n                }\n                else if (typeof this.column.headerClass === 'function') {\n                    var res = this.column.headerClass({\n                        column: this.column\n                    });\n                    if (typeof res === 'string') {\n                        cls += res;\n                    }\n                    else if (typeof res === 'object') {\n                        var keys = Object.keys(res);\n                        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                            var k = keys_1[_i];\n                            if (res[k] === true)\n                                cls += \" \" + k;\n                        }\n                    }\n                }\n            }\n            var sortDir = this.sortDir;\n            if (sortDir) {\n                cls += \" sort-active sort-\" + sortDir;\n            }\n            return cls;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"name\", {\n        get: function () {\n            // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n            return this.column.headerTemplate === undefined ? this.column.name : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"minWidth\", {\n        get: function () {\n            return this.column.minWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"maxWidth\", {\n        get: function () {\n            return this.column.maxWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"width\", {\n        get: function () {\n            return this.column.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"isCheckboxable\", {\n        get: function () {\n            return this.column.checkboxable &&\n                this.column.headerCheckboxable &&\n                this.selectionType === types_1.SelectionType.checkbox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableHeaderCellComponent.prototype.onContextmenu = function ($event) {\n        this.columnContextmenu.emit({ event: $event, column: this.column });\n    };\n    DataTableHeaderCellComponent.prototype.calcSortDir = function (sorts) {\n        var _this = this;\n        if (sorts && this.column) {\n            var sort = sorts.find(function (s) {\n                return s.prop === _this.column.prop;\n            });\n            if (sort)\n                return sort.dir;\n        }\n    };\n    DataTableHeaderCellComponent.prototype.onSort = function () {\n        if (!this.column.sortable)\n            return;\n        var newValue = utils_1.nextSortDir(this.sortType, this.sortDir);\n        this.sort.emit({\n            column: this.column,\n            prevValue: this.sortDir,\n            newValue: newValue\n        });\n    };\n    DataTableHeaderCellComponent.prototype.calcSortClass = function (sortDir) {\n        if (sortDir === types_1.SortDirection.asc) {\n            return \"sort-btn sort-asc \" + this.sortAscendingIcon;\n        }\n        else if (sortDir === types_1.SortDirection.desc) {\n            return \"sort-btn sort-desc \" + this.sortDescendingIcon;\n        }\n        else {\n            return \"sort-btn\";\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTableHeaderCellComponent.prototype, \"sortType\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTableHeaderCellComponent.prototype, \"sortAscendingIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTableHeaderCellComponent.prototype, \"sortDescendingIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DataTableHeaderCellComponent.prototype, \"allRowsSelected\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTableHeaderCellComponent.prototype, \"selectionType\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DataTableHeaderCellComponent.prototype, \"column\", null);\n    __decorate([\n        core_1.HostBinding('style.height.px'),\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DataTableHeaderCellComponent.prototype, \"headerHeight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], DataTableHeaderCellComponent.prototype, \"sorts\", null);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableHeaderCellComponent.prototype, \"sort\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableHeaderCellComponent.prototype, \"select\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", Object)\n    ], DataTableHeaderCellComponent.prototype, \"columnContextmenu\", void 0);\n    __decorate([\n        core_1.HostBinding('class'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableHeaderCellComponent.prototype, \"columnCssClasses\", null);\n    __decorate([\n        core_1.HostBinding('attr.title'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableHeaderCellComponent.prototype, \"name\", null);\n    __decorate([\n        core_1.HostBinding('style.minWidth.px'),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableHeaderCellComponent.prototype, \"minWidth\", null);\n    __decorate([\n        core_1.HostBinding('style.maxWidth.px'),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableHeaderCellComponent.prototype, \"maxWidth\", null);\n    __decorate([\n        core_1.HostBinding('style.width.px'),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableHeaderCellComponent.prototype, \"width\", null);\n    __decorate([\n        core_1.HostListener('contextmenu', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableHeaderCellComponent.prototype, \"onContextmenu\", null);\n    DataTableHeaderCellComponent = __decorate([\n        core_1.Component({\n            selector: 'datatable-header-cell',\n            template: \"\\n    <div>\\n      <label\\n        *ngIf=\\\"isCheckboxable\\\"\\n        class=\\\"datatable-checkbox\\\">\\n        <input\\n          type=\\\"checkbox\\\"\\n          [checked]=\\\"allRowsSelected\\\"\\n          (change)=\\\"select.emit(!allRowsSelected)\\\"\\n        />\\n      </label>\\n      <span\\n        *ngIf=\\\"!column.headerTemplate\\\"\\n        class=\\\"datatable-header-cell-wrapper\\\">\\n        <span\\n          class=\\\"datatable-header-cell-label draggable\\\"\\n          (click)=\\\"onSort()\\\"\\n          [innerHTML]=\\\"name\\\">\\n        </span>\\n      </span>\\n      <ng-template\\n        *ngIf=\\\"column.headerTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.headerTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"cellContext\\\">\\n      </ng-template>\\n      <span\\n        (click)=\\\"onSort()\\\"\\n        [class]=\\\"sortClass\\\">\\n      </span>\\n    </div>\\n  \",\n            host: {\n                class: 'datatable-header-cell'\n            },\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\n        })\n    ], DataTableHeaderCellComponent);\n    return DataTableHeaderCellComponent;\n}());\nexports.DataTableHeaderCellComponent = DataTableHeaderCellComponent;\n",null]}