{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/body/body-row.component.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/body/body-row.component.js","mtime":1511963642000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar utils_1 = require(\"../../utils\");\nvar services_1 = require(\"../../services\");\nvar events_1 = require(\"../../events\");\nvar DataTableBodyRowComponent = /*@__PURE__*/ (function () {\n    function DataTableBodyRowComponent(differs, scrollbarHelper, cd, element) {\n        this.differs = differs;\n        this.scrollbarHelper = scrollbarHelper;\n        this.cd = cd;\n        this.activate = new core_1.EventEmitter();\n        this._groupStyles = {\n            left: {},\n            center: {},\n            right: {}\n        };\n        this._element = element.nativeElement;\n        this._rowDiffer = differs.find({}).create();\n    }\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"columns\", {\n        get: function () {\n            return this._columns;\n        },\n        set: function (val) {\n            this._columns = val;\n            this.recalculateColumns(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"innerWidth\", {\n        get: function () {\n            return this._innerWidth;\n        },\n        set: function (val) {\n            if (this._columns) {\n                var colByPin = utils_1.columnsByPin(this._columns);\n                this._columnGroupWidths = utils_1.columnGroupWidths(colByPin, colByPin);\n            }\n            this._innerWidth = val;\n            this.recalculateColumns();\n            this.buildStylesByGroup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"offsetX\", {\n        get: function () { return this._offsetX; },\n        set: function (val) {\n            this._offsetX = val;\n            this.buildStylesByGroup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"cssClass\", {\n        get: function () {\n            var cls = 'datatable-body-row';\n            if (this.isSelected)\n                cls += ' active';\n            if (this.rowIndex % 2 !== 0)\n                cls += ' datatable-row-odd';\n            if (this.rowIndex % 2 === 0)\n                cls += ' datatable-row-even';\n            if (this.rowClass) {\n                var res = this.rowClass(this.row);\n                if (typeof res === 'string') {\n                    cls += \" \" + res;\n                }\n                else if (typeof res === 'object') {\n                    var keys = Object.keys(res);\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var k = keys_1[_i];\n                        if (res[k] === true)\n                            cls += \" \" + k;\n                    }\n                }\n            }\n            return cls;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"columnsTotalWidths\", {\n        get: function () {\n            return this._columnGroupWidths.total;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableBodyRowComponent.prototype.ngDoCheck = function () {\n        if (this._rowDiffer.diff(this.row)) {\n            this.cd.markForCheck();\n        }\n    };\n    DataTableBodyRowComponent.prototype.trackByGroups = function (index, colGroup) {\n        return colGroup.type;\n    };\n    DataTableBodyRowComponent.prototype.columnTrackingFn = function (index, column) {\n        return column.$$id;\n    };\n    DataTableBodyRowComponent.prototype.buildStylesByGroup = function () {\n        this._groupStyles['left'] = this.calcStylesByGroup('left');\n        this._groupStyles['center'] = this.calcStylesByGroup('center');\n        this._groupStyles['right'] = this.calcStylesByGroup('right');\n        this.cd.markForCheck();\n    };\n    DataTableBodyRowComponent.prototype.calcStylesByGroup = function (group) {\n        var widths = this._columnGroupWidths;\n        var offsetX = this.offsetX;\n        var styles = {\n            width: widths[group] + \"px\"\n        };\n        if (group === 'left') {\n            utils_1.translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            var bodyWidth = parseInt(this.innerWidth + '', 0);\n            var totalDiff = widths.total - bodyWidth;\n            var offsetDiff = totalDiff - offsetX;\n            var offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n            utils_1.translateXY(styles, offset, 0);\n        }\n        return styles;\n    };\n    DataTableBodyRowComponent.prototype.onActivate = function (event, index) {\n        event.cellIndex = index;\n        event.rowElement = this._element;\n        this.activate.emit(event);\n    };\n    DataTableBodyRowComponent.prototype.onKeyDown = function (event) {\n        var keyCode = event.keyCode;\n        var isTargetRow = event.target === this._element;\n        var isAction = keyCode === utils_1.Keys.return ||\n            keyCode === utils_1.Keys.down ||\n            keyCode === utils_1.Keys.up ||\n            keyCode === utils_1.Keys.left ||\n            keyCode === utils_1.Keys.right;\n        if (isAction && isTargetRow) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event: event,\n                row: this.row,\n                rowElement: this._element\n            });\n        }\n    };\n    DataTableBodyRowComponent.prototype.onMouseenter = function (event) {\n        this.activate.emit({\n            type: 'mouseenter',\n            event: event,\n            row: this.row,\n            rowElement: this._element\n        });\n    };\n    DataTableBodyRowComponent.prototype.recalculateColumns = function (val) {\n        if (val === void 0) {\n            val = this.columns;\n        }\n        this._columns = val;\n        var colsByPin = utils_1.columnsByPin(this._columns);\n        this._columnsByPin = utils_1.allColumnsByPinArr(this._columns);\n        this._columnGroupWidths = utils_1.columnGroupWidths(colsByPin, this._columns);\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], DataTableBodyRowComponent.prototype, \"columns\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTableBodyRowComponent.prototype, \"innerWidth\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableBodyRowComponent.prototype, \"expanded\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableBodyRowComponent.prototype, \"rowClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableBodyRowComponent.prototype, \"row\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableBodyRowComponent.prototype, \"group\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableBodyRowComponent.prototype, \"isSelected\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DataTableBodyRowComponent.prototype, \"rowIndex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableBodyRowComponent.prototype, \"displayCheck\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTableBodyRowComponent.prototype, \"offsetX\", null);\n    __decorate([\n        core_1.HostBinding('class'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableBodyRowComponent.prototype, \"cssClass\", null);\n    __decorate([\n        core_1.HostBinding('style.height.px'),\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DataTableBodyRowComponent.prototype, \"rowHeight\", void 0);\n    __decorate([\n        core_1.HostBinding('style.width.px'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableBodyRowComponent.prototype, \"columnsTotalWidths\", null);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableBodyRowComponent.prototype, \"activate\", void 0);\n    __decorate([\n        core_1.HostListener('keydown', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableBodyRowComponent.prototype, \"onKeyDown\", null);\n    __decorate([\n        core_1.HostListener('mouseenter', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableBodyRowComponent.prototype, \"onMouseenter\", null);\n    DataTableBodyRowComponent = __decorate([\n        core_1.Component({\n            selector: 'datatable-body-row',\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush,\n            template: \"\\n    <div\\n      *ngFor=\\\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\\\"\\n      class=\\\"datatable-row-{{colGroup.type}} datatable-row-group\\\"\\n      [ngStyle]=\\\"_groupStyles[colGroup.type]\\\">\\n      <datatable-body-cell\\n        *ngFor=\\\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\\\"\\n        tabindex=\\\"-1\\\"\\n        [row]=\\\"row\\\"\\n        [group]=\\\"group\\\"\\n        [expanded]=\\\"expanded\\\"\\n        [isSelected]=\\\"isSelected\\\"\\n        [rowIndex]=\\\"rowIndex\\\"\\n        [column]=\\\"column\\\"\\n        [rowHeight]=\\\"rowHeight\\\"\\n        [displayCheck]=\\\"displayCheck\\\"\\n        (activate)=\\\"onActivate($event, ii)\\\">\\n      </datatable-body-cell>\\n    </div>      \\n  \"\n        })\n    ], DataTableBodyRowComponent);\n    return DataTableBodyRowComponent;\n}());\nexports.DataTableBodyRowComponent = DataTableBodyRowComponent;\n",null]}