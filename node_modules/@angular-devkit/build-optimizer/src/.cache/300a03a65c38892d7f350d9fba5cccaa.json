{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/ngx-store/src/utility/storage/shared-storage.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/ngx-store/src/utility/storage/shared-storage.js","mtime":1526508791000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { NgxStorage } from './storage';\nvar SharedStorage = /*@__PURE__*/ (function (_super) {\n    __extends(SharedStorage, _super);\n    function SharedStorage() {\n        var _this = _super.call(this) || this;\n        _this.sharedMap = new Map();\n        _this.externalChanges = undefined;\n        return _this;\n    }\n    Object.defineProperty(SharedStorage.prototype, \"type\", {\n        get: function () {\n            return 'sharedStorage';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SharedStorage.prototype, \"length\", {\n        get: function () {\n            return this.getAllKeys().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SharedStorage.prototype.key = function (index) {\n        return this.getAllKeys()[index];\n    };\n    SharedStorage.prototype.getItem = function (key) {\n        var value = this.sharedMap.get(key);\n        return (value !== undefined) ? value : null;\n    };\n    SharedStorage.prototype.removeItem = function (key) {\n        this.sharedMap.delete(key);\n    };\n    SharedStorage.prototype.setItem = function (key, value) {\n        this.sharedMap.set(key, value);\n    };\n    SharedStorage.prototype.clear = function () {\n        this.sharedMap.clear();\n    };\n    SharedStorage.prototype.forEach = function (func) {\n        return this.sharedMap.forEach(function (value, key) { return func(value, key); });\n    };\n    SharedStorage.prototype.getAllKeys = function () {\n        return Array.from(this.sharedMap.keys());\n    };\n    return SharedStorage;\n}(NgxStorage));\nexport { SharedStorage };\nexport var sharedStorage = new SharedStorage();\n//# sourceMappingURL=shared-storage.js.map\n",null]}