{"remainingRequest":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/body/body-cell.component.js","dependencies":[{"path":"/home/liutao/Project/0/oncology/node_modules/@swimlane/ngx-datatable/release/components/body/body-cell.component.js","mtime":1511963642000},{"path":"/home/liutao/Project/0/oncology/node_modules/cache-loader/dist/cjs.js","mtime":1539266424898},{"path":"/home/liutao/Project/0/oncology/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar utils_1 = require(\"../../utils\");\nvar types_1 = require(\"../../types\");\nvar events_1 = require(\"../../events\");\nvar DataTableBodyCellComponent = /*@__PURE__*/ (function () {\n    function DataTableBodyCellComponent(element, cd) {\n        this.cd = cd;\n        this.activate = new core_1.EventEmitter();\n        this.isFocused = false;\n        this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n        this.activateFn = this.activate.emit.bind(this.activate);\n        this.cellContext = {\n            onCheckboxChangeFn: this.onCheckboxChangeFn,\n            activateFn: this.activateFn,\n            row: this.row,\n            group: this.group,\n            value: this.value,\n            column: this.column,\n            rowHeight: this.rowHeight,\n            isSelected: this.isSelected,\n            rowIndex: this.rowIndex\n        };\n        this._element = element.nativeElement;\n    }\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"group\", {\n        get: function () {\n            return this._group;\n        },\n        set: function (group) {\n            this._group = group;\n            this.cellContext.group = group;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"rowHeight\", {\n        get: function () {\n            return this._rowHeight;\n        },\n        set: function (val) {\n            this._rowHeight = val;\n            this.cellContext.rowHeight = val;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"isSelected\", {\n        get: function () {\n            return this._isSelected;\n        },\n        set: function (val) {\n            this._isSelected = val;\n            this.cellContext.isSelected = val;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"expanded\", {\n        get: function () {\n            return this._expanded;\n        },\n        set: function (val) {\n            this._expanded = val;\n            this.cellContext.expanded = val;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"rowIndex\", {\n        get: function () {\n            return this._rowIndex;\n        },\n        set: function (val) {\n            this._rowIndex = val;\n            this.cellContext.rowIndex = val;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"column\", {\n        get: function () {\n            return this._column;\n        },\n        set: function (column) {\n            this._column = column;\n            this.cellContext.column = column;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"row\", {\n        get: function () {\n            return this._row;\n        },\n        set: function (row) {\n            this._row = row;\n            this.cellContext.row = row;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"sorts\", {\n        get: function () {\n            return this._sorts;\n        },\n        set: function (val) {\n            this._sorts = val;\n            this.calcSortDir = this.calcSortDir(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"columnCssClasses\", {\n        get: function () {\n            var cls = 'datatable-body-cell';\n            if (this.column.cellClass) {\n                if (typeof this.column.cellClass === 'string') {\n                    cls += ' ' + this.column.cellClass;\n                }\n                else if (typeof this.column.cellClass === 'function') {\n                    var res = this.column.cellClass({\n                        row: this.row,\n                        group: this.group,\n                        column: this.column,\n                        value: this.value,\n                        rowHeight: this.rowHeight\n                    });\n                    if (typeof res === 'string') {\n                        cls += res;\n                    }\n                    else if (typeof res === 'object') {\n                        var keys = Object.keys(res);\n                        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                            var k = keys_1[_i];\n                            if (res[k] === true)\n                                cls += \" \" + k;\n                        }\n                    }\n                }\n            }\n            if (!this.sortDir)\n                cls += ' sort-active';\n            if (this.isFocused)\n                cls += ' active';\n            if (this.sortDir === types_1.SortDirection.asc)\n                cls += ' sort-asc';\n            if (this.sortDir === types_1.SortDirection.desc)\n                cls += ' sort-desc';\n            return cls;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"width\", {\n        get: function () {\n            return this.column.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"height\", {\n        get: function () {\n            var height = this.rowHeight;\n            if (isNaN(height))\n                return height;\n            return height + 'px';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableBodyCellComponent.prototype.ngDoCheck = function () {\n        this.checkValueUpdates();\n    };\n    DataTableBodyCellComponent.prototype.ngOnDestroy = function () {\n        if (this.cellTemplate) {\n            this.cellTemplate.clear();\n        }\n    };\n    DataTableBodyCellComponent.prototype.checkValueUpdates = function () {\n        var value = '';\n        if (!this.row || !this.column) {\n            value = '';\n        }\n        else {\n            var val = this.column.$$valueGetter(this.row, this.column.prop);\n            var userPipe = this.column.pipe;\n            if (userPipe) {\n                value = userPipe.transform(val);\n            }\n            else if (value !== undefined) {\n                value = val;\n            }\n        }\n        if (this.value !== value) {\n            this.value = value;\n            this.cellContext.value = value;\n            this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n            this.cd.markForCheck();\n        }\n    };\n    DataTableBodyCellComponent.prototype.onFocus = function () {\n        this.isFocused = true;\n    };\n    DataTableBodyCellComponent.prototype.onBlur = function () {\n        this.isFocused = false;\n    };\n    DataTableBodyCellComponent.prototype.onClick = function (event) {\n        this.activate.emit({\n            type: 'click',\n            event: event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    };\n    DataTableBodyCellComponent.prototype.onDblClick = function (event) {\n        this.activate.emit({\n            type: 'dblclick',\n            event: event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    };\n    DataTableBodyCellComponent.prototype.onKeyDown = function (event) {\n        var keyCode = event.keyCode;\n        var isTargetCell = event.target === this._element;\n        var isAction = keyCode === utils_1.Keys.return ||\n            keyCode === utils_1.Keys.down ||\n            keyCode === utils_1.Keys.up ||\n            keyCode === utils_1.Keys.left ||\n            keyCode === utils_1.Keys.right;\n        if (isAction && isTargetCell) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event: event,\n                row: this.row,\n                group: this.group,\n                rowHeight: this.rowHeight,\n                column: this.column,\n                value: this.value,\n                cellElement: this._element\n            });\n        }\n    };\n    DataTableBodyCellComponent.prototype.onCheckboxChange = function (event) {\n        this.activate.emit({\n            type: 'checkbox',\n            event: event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    };\n    DataTableBodyCellComponent.prototype.calcSortDir = function (sorts) {\n        var _this = this;\n        if (!sorts)\n            return;\n        var sort = sorts.find(function (s) {\n            return s.prop === _this.column.prop;\n        });\n        if (sort)\n            return sort.dir;\n    };\n    DataTableBodyCellComponent.prototype.stripHtml = function (html) {\n        if (!html.replace)\n            return html;\n        return html.replace(/<\\/?[^>]+(>|$)/g, '');\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableBodyCellComponent.prototype, \"displayCheck\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DataTableBodyCellComponent.prototype, \"group\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTableBodyCellComponent.prototype, \"rowHeight\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], DataTableBodyCellComponent.prototype, \"isSelected\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], DataTableBodyCellComponent.prototype, \"expanded\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], DataTableBodyCellComponent.prototype, \"rowIndex\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DataTableBodyCellComponent.prototype, \"column\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DataTableBodyCellComponent.prototype, \"row\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], DataTableBodyCellComponent.prototype, \"sorts\", null);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DataTableBodyCellComponent.prototype, \"activate\", void 0);\n    __decorate([\n        core_1.ViewChild('cellTemplate', { read: core_1.ViewContainerRef }),\n        __metadata(\"design:type\", core_1.ViewContainerRef)\n    ], DataTableBodyCellComponent.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        core_1.HostBinding('class'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableBodyCellComponent.prototype, \"columnCssClasses\", null);\n    __decorate([\n        core_1.HostBinding('style.width.px'),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableBodyCellComponent.prototype, \"width\", null);\n    __decorate([\n        core_1.HostBinding('style.height'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], DataTableBodyCellComponent.prototype, \"height\", null);\n    __decorate([\n        core_1.HostListener('focus'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableBodyCellComponent.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableBodyCellComponent.prototype, \"onBlur\", null);\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableBodyCellComponent.prototype, \"onClick\", null);\n    __decorate([\n        core_1.HostListener('dblclick', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableBodyCellComponent.prototype, \"onDblClick\", null);\n    __decorate([\n        core_1.HostListener('keydown', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], DataTableBodyCellComponent.prototype, \"onKeyDown\", null);\n    DataTableBodyCellComponent = __decorate([\n        core_1.Component({\n            selector: 'datatable-body-cell',\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush,\n            template: \"\\n    <div class=\\\"datatable-body-cell-label\\\">\\n      <label\\n        *ngIf=\\\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\\\"\\n        class=\\\"datatable-checkbox\\\">\\n        <input\\n          type=\\\"checkbox\\\"\\n          [checked]=\\\"isSelected\\\"\\n          (click)=\\\"onCheckboxChange($event)\\\"\\n        />\\n      </label>\\n      <span\\n        *ngIf=\\\"!column.cellTemplate\\\"\\n        [title]=\\\"sanitizedValue\\\"\\n        [innerHTML]=\\\"value\\\">\\n      </span>\\n      <ng-template #cellTemplate\\n        *ngIf=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"cellContext\\\">\\n      </ng-template>\\n    </div>\\n  \"\n        })\n    ], DataTableBodyCellComponent);\n    return DataTableBodyCellComponent;\n}());\nexports.DataTableBodyCellComponent = DataTableBodyCellComponent;\n",null]}